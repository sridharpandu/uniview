<?php
 

 
namespace Drupal\uniview8_ebs\Form;
 
use Drupal\Core\Form\ConfigFormBase;
 
use Drupal\Core\Form\FormStateInterface;
 
class ConfigForm extends ConfigFormBase {
 
  
 
  public function getFormId() {
 
    return 'config_form';
 
  }
 
 
 
  public function buildForm(array $form, FormStateInterface $form_state){

 $form = parent::buildForm($form, $form_state);
 
    $config = $this->config('ebs.settings');

    $form['ebs_requesturl'] = array(
      '#type' => 'textfield',
      '#title' => t('EBS REQUEST URL'),
      '#description' => 'URL provided by EBS',
      '#default_value' => $config->get('ebs_requesturl'),
      '#required' => TRUE,
  );
  $form['ebs_return_url'] = array(
      '#type' => 'textfield',
      '#title' => t('RETURN URL'),
      '#description' => 'the url you want the payment gateway to return back after transaction is successful',
      '#default_value' => $config->get('ebs_return_url'),
      '#required' => TRUE,
  );
  $form['ebs_secretkey'] = array(
      '#type' => 'textfield',
      '#title' => t('SECRET KEY'),
      '#description' => 'Secret Key provided by the ebs Payment Gateway used for calculating hash. ',
      '#default_value' => $config->get('ebs_secretkey'),
      '#required' => TRUE,
  );
  $form['ebs_channel'] = array(
      '#type' => 'textfield',
      '#title' => t('CHANNEL'),
      '#description' => 'The payment channel. Give ‘10’ for Standard',
      '#default_value' => $config->get('ebs_channel'),
      '#required' => TRUE,
  );
  $form['ebs_accountid'] = array(
      '#type' => 'textfield',
      '#title' => t('ACCOUNT ID'),
      '#description' => 'Your Account ID  generated by ebs Bank. ',
      '#default_value' => $config->get('ebs_accountid'),
      '#required' => TRUE,
  );
  $form['ebs_mode'] = array(
      '#type' => 'textfield',
      '#title' => t('MODE'),
      '#description' => 'Mode of payment should be LIVE. ',
      '#default_value' => $config->get('ebs_mode'),
      '#required' => TRUE,
  );
  $form['ebs_currency'] = array(
      '#type' => 'textfield',
      '#title' => t('CURRENCY'),
      '#description' => 'Curreny INR. ',
      '#default_value' => $config->get('ebs_currency'),
      '#required' => TRUE,
  );
$form['ebs_currencycode'] = array(
      '#type' => 'textfield',
      '#title' => t('CURRENCY CODE'),
      '#description' => 'Curreny INR. ',
      '#default_value' => $config->get('ebs_currencycode'),
      '#required' => TRUE,
  );
  $form['ebs_pageid'] = array(
      '#type' => 'textfield',
      '#title' => t('PAGE ID'),
      '#description' => 'The id of the customized page. ',
      '#default_value' => $config->get('ebs_pageid'),
      '#required' => TRUE,
  );
 
 $form['ebs_paymentoption'] = array(
      '#type' => 'checkboxes',
      '#title' => t('PAYMENT OPTION'),
      '#options' => array('1001' => 'Test', 'Credit' => 'Credit', 'Debit' => 'Debit', 'Cash' => 'Cash', 'Net Banking' => 'Net Banking',  'EMI' => 'EMI'),
      '#default_value' => $config->get('ebs_paymentoption'),
      '#description' => t('Note : 1001 is TEST. When this is enabled, others should not be.'),
      '#required' => TRUE,
    );

  
 $node_types = \Drupal\node\Entity\NodeType::loadMultiple();
 
    $node_type_titles = array();
 
    foreach ($node_types as $machine_name => $val) {
 
      $node_type_titles[$machine_name] = $val->label();
 
    }
 


   return $form;  
}

 
  public function submitForm(array &$form, FormStateInterface $form_state) {
 
    $config = $this->config('ebs.settings');
 
$config->set('ebs_requesturl', $form_state->getValue('ebs_requesturl'));
$config->set('ebs_return_url', $form_state->getValue('ebs_return_url'));
$config->set('ebs_secretkey', $form_state->getValue('ebs_secretkey'));
$config->set('ebs_channel', $form_state->getValue('ebs_channel'));
$config->set('ebs_accountid', $form_state->getValue('ebs_accountid'));
$config->set('ebs_mode', $form_state->getValue('ebs_mode'));
$config->set('ebs_currency', $form_state->getValue('ebs_currency'));
$config->set('ebs_currencycode', $form_state->getValue('ebs_currencycode'));
$config->set('ebs_pageid', $form_state->getValue('ebs_pageid'));
$config->set('ebs_paymentoption', $form_state->getValue('ebs_paymentoption'));

  \Drupal::service('config.factory')->getEditable('foo.bar')->set('foo', 'foo')->save(); 
 
    $config->save();



 
    return parent::submitForm($form, $form_state);
 
  }
 

  protected function getEditableConfigNames() {
 
    return [
 
      'ebs.settings',
 
    ];
 
  }
 
}
